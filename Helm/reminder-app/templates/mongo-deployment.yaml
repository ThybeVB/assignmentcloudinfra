apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mongo
  labels:
    app: {{ .Release.Name }}-mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-mongo
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-mongo
    spec:
      containers:
      - name: mongo
        image: {{ .Values.mongo.image }}
        args: ["--bind_ip_all"]
        ports:
        - containerPort: 27017
        #env:
        #- name: MONGO_INITDB_ROOT_USERNAME
        #  valueFrom:
        #    secretKeyRef:
        #      name: mongo-creds
        #      key: username
        #- name: MONGO_INITDB_ROOT_PASSWORD
        #  valueFrom:
        #    secretKeyRef:
        #      name: mongo-creds
        #      key: password
        volumeMounts:
        - mountPath: /data/db
          name: mongo-storage
        #- mountPath: /etc/mongo/mongod.conf
        #  subPath: mongod.conf
        #  name: mongod-config
      volumes:
      - name: mongo-storage
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-mongo-pvc
      #- name: mongod-config
      #  configMap:
      #    name: {{ .Release.Name }}-mongod-config
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-mongo-service
spec:
  selector:
    app: {{ .Release.Name }}-mongo
  ports:
  - protocol: TCP
    port: 27017
    targetPort: 27017
  type: ClusterIP